---
layout: page
---
<div class="container mt-5">
  <!-- Filter by Tags Dropdown -->
  <div class="row justify-content-center mb-4">
    <div class="col-12 col-md-8 text-center">
      <select id="tag-filter-dropdown" class="custom-select">
        <option value="all">All Tags</option>
        {% assign all_tags = site.members | map: 'tags' | join: ',' | split: ',' | uniq %}
        {% for tag in all_tags %}
          {% if tag != '' %}
            <option value="{{ tag | slugify }}">{{ tag }}</option>
          {% endif %}
        {% endfor %}
      </select>
    </div>
  </div>

  <!-- Profiles Display Section -->
  <div id="profiles-list" class="row">
    {% if site.members.size > 0 %}
      {% for profile in site.members %}
        <div class="col-12 col-md-6 mb-4 profile-item" data-tags="{{ profile.tags | join: ' ' | slugify }}">
          <div class="profile d-flex align-items-start p-3">
            <!-- Profile Image Section -->
            {% if profile.image %}
              {% assign profile_image_path = '/assets/img/members/' | append: profile.image %}
              <div class="profile-img">
                <img src="{{ profile_image_path }}" class="profile-img-fixed img-fluid rounded-circle" alt="{{ profile.name }}">
              </div>
            {% endif %}

            <!-- Profile Content Section -->
            <div class="profile-content ml-3">
              <h2>{{ profile.name }}</h2>
              <p>Tags: {{ profile.tags | join: ', ' }}</p>
              {{ profile.content | markdownify }}
            </div>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p>No profiles found.</p>
    {% endif %}
  </div>
</div>

<!-- JavaScript for Dynamic Tag Filtering with Dropdown -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tagDropdown = document.getElementById('tag-filter-dropdown');
    const profileItems = document.querySelectorAll('.profile-item');

    tagDropdown.addEventListener('change', function () {
      const selectedTag = this.value;

      // Show/hide profiles based on selected tag
      profileItems.forEach((item) => {
        const itemTags = item.getAttribute('data-tags');

        if (selectedTag === 'all' || itemTags.includes(selectedTag)) {
          item.style.display = 'block'; // Show the item
        } else {
          item.style.display = 'none'; // Hide the item
        }
      });
    });
  });
</script>

<!-- Custom Styles -->
<style>
  .custom-select {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }

  .profile-item {
    transition: all 0.3s ease-in-out;
  }

  .profile-img-fixed {
    width: 120px; /* Adjusted width to fit better in two columns */
    height: 120px;
    object-fit: cover;
    border-radius: 50%;
    margin-right: 15px;
  }

  .profile-content {
    width: calc(100% - 135px); /* Adjusted to fit better in two columns */
  }

  .profile {
    width: 100%;
    margin-bottom: 20px;
    padding: 10px;
    border-radius: 5px;
    border: none; /* Removed the border to avoid the grey lines around each profile */
  }

  .container.mt-5 {
    max-width: 100%; /* Utilize the full width of the screen */
  }

  @media (min-width: 768px) {
    .profile-content {
      width: calc(100% - 140px);
    }
  }
</style>