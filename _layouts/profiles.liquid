---
layout: page
---

<div class="container mt-5">

  <!-- Tag Filter Section -->
  <div class="tag-category-list text-center">
    <ul class="tag-list d-inline-flex flex-wrap justify-content-center p-0 m-0">
      <li class="mx-2"><a href="#" class="tag-link active" data-filter="all">All</a></li>
      {% assign all_tags = site.members | map: 'tags' | join: ',' | split: ',' | uniq %}
      {% for tag in all_tags %}
        {% if tag != "" %}
          <li class="mx-2">
            <i class="fa-solid fa-hashtag fa-sm"></i>
            <a href="#" class="tag-link" data-filter="{{ tag | slugify }}">{{ tag }}</a>
          </li>
        {% endif %}
      {% endfor %}
    </ul>
  </div>

  <!-- Profiles Display Section -->
  <div id="profiles-list" class="row justify-content-center">
    {% if site.members.size > 0 %}
      {% for profile in site.members %}
        <div class="col-12 col-md-8 mb-4 profile-item" data-tags="{{ profile.tags | join: ' ' | slugify }}">
          <hr>
          <div class="profile d-flex align-items-start">
            <!-- Profile Image Section -->
            {% if profile.image %}
              {% assign profile_image_path = '/assets/img/members/' | append: profile.image %}
              <div class="profile-img">
                <img src="{{ profile_image_path }}" class="profile-img-fixed img-fluid z-depth-1 rounded-circle" alt="{{ profile.name }}">
              </div>
            {% endif %}

            <!-- Profile Content Section -->
            <div class="profile-content ml-3">
              <h2>{{ profile.name }}</h2>
              <p>Tags: {{ profile.tags | join: ', ' }}</p>
              {{ profile.content | markdownify }}
            </div>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p>No profiles found.</p> <!-- Display message if no profiles are found -->
    {% endif %}
  </div>
</div>

<!-- JavaScript for Dynamic Tag Filtering -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Tag Filtering
    const tagLinks = document.querySelectorAll(".tag-link");
    const profileItems = document.querySelectorAll(".profile-item");

    // Add click event listeners to each tag link
    tagLinks.forEach(link => {
      link.addEventListener("click", function (e) {
        e.preventDefault();

        const selectedTag = this.getAttribute("data-filter");

        // Show/hide profiles based on selected tag
        profileItems.forEach(item => {
          const itemTags = item.getAttribute("data-tags");

          if (selectedTag === "all" || itemTags.includes(selectedTag)) {
            item.style.display = "block"; // Show the item
          } else {
            item.style.display = "none";  // Hide the item
          }
        });

        // Update active class on the tag links
        tagLinks.forEach(link => link.classList.remove("active"));
        this.classList.add("active");
      });
    });
  });
</script>

<style>
  /* Custom Styles for Tag List and Profiles */
  .tag-category-list ul {
    list-style: none;
    padding-left: 0;
  }
  .tag-category-list ul li {
    display: inline;
    margin: 0 10px;
  }
  .tag-link {
    text-decoration: none;
    font-size: 1.1em;
    color: #007bff;
    cursor: pointer;
  }
  .tag-link.active, .tag-link:hover {
    font-weight: bold;
    color: #0056b3;
  }
  .profile-item {
    display: block; /* Set all to visible by default */
    transition: all 0.3s ease-in-out;
  }
</style>
